---
import { ViewTransitions } from "astro:transitions";
export interface Props {
  title: string;
  description: string;
}

const { title, description } = Astro.props;
---

<ViewTransitions />
<!-- Global Metadata -->
<meta charset="utf-8" />
<meta name="viewport" content="width=device-width,initial-scale=1" />
<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
<meta name="generator" content={Astro.generator} />

<!-- Primary Meta Tags -->
<title>{title}</title>
<meta name="title" content={title} />
<meta name="description" content={description} />

<!-- Open Graph / Facebook -->
<meta property="og:type" content="website" />
<meta property="og:url" content={Astro.url} />
<meta property="og:title" content={title} />
<meta property="og:description" content={description} />

<!-- Twitter -->
<meta property="twitter:card" content="summary_large_image" />
<meta property="twitter:url" content={Astro.url} />
<meta property="twitter:title" content={title} />
<meta property="twitter:description" content={description} />
<script is:inline>
  const theme = (() => {
    if (typeof localStorage !== "undefined" && localStorage.getItem("theme")) {
      return localStorage.getItem("theme");
    }
    if (window.matchMedia("(prefers-color-scheme: dark)").matches) {
      return "dark";
    }
    return "light";
  })();
  const setTheme = (theme) =>
    document.documentElement.setAttribute("data-theme", theme);

  if (theme === "light") {
    setTheme("light");
  } else {
    setTheme("dark");
  }
</script>
<script>
  const getTheme = () => localStorage.getItem("theme") || "light";

  const setTheme = (theme: string) =>
    document.documentElement.setAttribute("data-theme", theme);

  document.addEventListener("astro:after-swap", () => setTheme(getTheme()));
</script>
